% Temporary file generated by /usr/bin/authorindex
entry{author editor authauthor autheditor}{}{}
strings{names} integers{numnames}
function{prefersecond}                  % return second argument if non-empty
{ duplicate$ empty$                   % return first argument otherwise
    'skip$                             %'
    { swap$ }
  if$
  pop$
}
function{pauthor}{ author authauthor prefersecond }
function{peditor}{ editor autheditor prefersecond }
function{termline}{ newline$ "%" write$ newline$ }
function{format}
{ duplicate$ empty$                   % field present?
    { pop$ }                           % no: do nothing but cleanup
    { duplicate$ 'names :=             %'memorise namelist in variable "names"
      num.names$ duplicate$
      #9999 >                      % too many names in list?
        { pop$ #9999 }          %   yes, truncate.
        'skip$                         %'  no, keep them all
      if$
      'numnames :=                      %'save number of names
      #0                                % start index
      { duplicate$ numnames < }        % test for "while$"
      { #1 +                            % next name
        duplicate$ names swap$        %   get name list and index
        "{ll}" format.name$            %   format curr. name
        "others" =                      %   et al part?
          'skip$                       %'    yes, do not output
          { duplicate$ names swap$ "{vv }{ll}{, ff}{, jj}" format.name$ write$ termline
duplicate$ names swap$ "{vv }{ll}{, ff}{, jj}" format.name$ purify$ "u" change.case$ write$ termline
cite$ write$ termline
 }               %     no: format all
        if$
      } while$ pop$                   % loop until index is 0
    }
  if$
}
function{default.type}{pauthor format pauthor empty$ 'skip$ 'skip$ if$ }
function{article}{default.type} function{book}{default.type}
function{booklet}{default.type} function{inbook}{default.type}
function{incollection}{default.type} function{inproceedings}{default.type}
function{conference}{default.type} function{manual}{default.type}
function{mastersthesis}{default.type} function{misc}{default.type}
function{phdthesis}{default.type} function{proceedings}{default.type}
function{techreport}{default.type} function{unpublished}{default.type}
read iterate{call.type$}
